angular.module("stack.service",[]),angular.module("stack.service").factory("userService",["$q","$http","$stamplay",function(a,b,c){var d=c.User().Model;return{isLogged:function(){return d.isLogged},login:function(){d.login("github")},logout:function(){d.logout("github")},getUserModel:function(){var c=a.defer();return d.get("_id")?c.resolve(d):d.currentUser().then(function(){b({method:"GET",url:"/api/gm/v0/challenges/stackchallenge/userchallenges/"+d.get("_id")}).success(function(a){a.points?d.totalPoints=a.points:d.totalPoints=0}),c.resolve(d)})["catch"](function(a){c.reject(a)}),c.promise}}}]).factory("usersService",["$q","$stamplay",function(a,b){var c=b.User().Collection;return{getUsers:function(){var b=a.defer();return c.fetch().then(function(){b.resolve(c)})["catch"](function(a){b.reject(a)}),b.promise},getById:function(d){var e,f=a.defer();return c.get(d)?(e=c.get(d),f.resolve(e)):(e=b.User().Model,e.fetch(d).then(function(){c.add(e),f.resolve(e)})["catch"](function(a){f.reject(a)})),f.promise},searchUser:function(c){var d=b.User().Collection,e=a.defer();return d.fetch(c).then(function(){e.resolve(d)})["catch"](function(a){e.reject(a)}),e.promise}}}]),angular.module("stack.service").factory("tagsService",["$q","$stamplay",function(a,b){var c=b.Cobject("tag").Collection;return{getTags:function(b){var d=a.defer();return c.length?d.resolve(c):(b=b||{},c.fetch(b).then(function(){d.resolve(c)})["catch"](function(a){d.reject(a)})),d.promise},getById:function(d){var e=a.defer(),f=b.Cobject("tag").Model;return c.get(d)?e.resolve(c.get(d)):f.fetch(d).then(function(){e.resolve(f)})["catch"](function(a){e.reject(a)}),e.promise},searchTag:function(c){var d=b.Cobject("tag").Collection,e=a.defer();return d.fetch(c).then(function(){e.resolve(d)})["catch"](function(a){e.reject(a)}),e.promise}}}]),angular.module("stack.service").factory("questionsService",["$q","usersService","tagsService","answersService","$stamplay",function(a,b,c,d,e){function f(a){return a.get("actions").votes.users_upvote.length-a.get("actions").votes.users_downvote.length}var g=e.Cobject("question").Collection;return{getQuestions:function(b){var c=a.defer(),d=e.Cobject("question").Collection;return d.fetch(b,!0).then(function(){d.instance.forEach(function(a){a.set("author",a.get("owner")),c.resolve(d)})}),c.promise},searchQuestion:function(d){var f=a.defer();if(g.get(d))f.resolve(g.get(d));else{var h=e.Cobject("question").Model;h.fetch(d).then(function(){return b.getById(h.get("author"))}).then(function(a){h.set("author",a)}).then(function(){return h.get("tags").length?c.getById(h.get("tags")[0]):void 0}).then(function(a){a&&h.set("tags",[a]),f.resolve(h)})["catch"](function(a){f.reject(a)})}return f.promise},getById:function(b){var c=a.defer();return this.searchQuestion(b).then(function(a){var b=[];async.each(a.get("answers"),function(a,c){"string"==typeof a?d.getById(a).then(function(a){b.push(a),c()})["catch"](function(a){c(a)}):(b.push(a),c())},function(d){d?c.reject(d):(a.set("answers",b),c.resolve(a))})}),c.promise},newQuestion:function(a){var b=e.Cobject("question").Model;return angular.forEach(a,function(a,c){b.set(c,a)}),b},updateViews:function(a){var b=e.Cobject("question").Model,c=a.get("views")||0;return c++,b.set("_id",a.get("_id")),b.set("views",c),b.set("owner",a.get("owner")),a.set("views",c),b.save({patch:!0})},updateModel:function(a,b){var c=e.Cobject("question").Model;return b.forEach(function(b){if("answers"!==b)c.set(b,a.get(b));else{var d=[];a.get("answers").forEach(function(a){d.push(a.get("_id"))}),c.set("answers",d)}}),c.set("_id",a.get("_id")),c.save({patch:!0})},voteUp:function(b){var c=a.defer(),d=b.get("author"),e=b.get("answers"),g=b.get("tags");return b.upVote().then(function(){b.set("author",d),b.set("answers",e),b.set("tags",g),c.resolve(f(b))})["catch"](function(a){c.reject(a)}),c.promise},voteDown:function(b){var c=a.defer(),d=b.get("author"),e=b.get("answers"),g=b.get("tags");return b.downVote().then(function(){b.set("author",d),b.set("answers",e),b.set("tags",g),c.resolve(f(b))})["catch"](function(a){c.reject(a)}),c.promise},commentQuestion:function(b,c){var d=a.defer(),e=b.get("author"),f=b.get("answers"),g=b.get("tags");return b.comment(c).then(function(){b.set("author",e),b.set("answers",f),b.set("tags",g),d.resolve()})["catch"](function(a){d.reject(a)}),d.promise},saveQuestion:function(d){var e=a.defer(),f=this.newQuestion(d);return f.save().then(function(){async.each(d.tags,function(a,b){c.getById(a).then(function(a){var c=a.get("count")||0;a.set("count",++c),a.save().then(function(){b()})["catch"](function(a){b(a)})})},function(a){a?e.reject(a):b.getById(f.get("author")).then(function(a){f.set("author",a)}).then(function(){f.get("tags").length?c.getById(f.get("tags")[0]).then(function(a){f.set("tags",[a]),g.add(f),e.resolve(f)}):(g.add(f),e.resolve(f))})["catch"](function(a){e.reject(a)})})})["catch"](function(a){e.reject(a)}),e.promise},submitAnswer:function(a,b){var c=a.get("answers");return c.push(b),a.set("answers",c),this.updateModel(a,["answers"])}}}]),angular.module("stack.service").factory("answersService",["$q","usersService","$stamplay",function(a,b,c){function d(a){return a.get("actions").votes.users_upvote.length-a.get("actions").votes.users_downvote.length}return{createAnswer:function(d){var e=a.defer(),f=c.Cobject("answer").Model;return angular.forEach(d,function(a,b){f.set(b,a)}),f.save().then(function(){return b.getById(f.get("author"))}).then(function(a){f.set("author",a),e.resolve(f)})["catch"](function(a){e.reject(a)}),e.promise},updateModel:function(a,b){var d=c.Cobject("answer").Model;return b.forEach(function(b){d.set(b,a.get(b))}),d.set("_id",a.get("_id")),d.save({patch:!0})},voteUp:function(b){var c=a.defer(),e=b.get("author");return b.upVote().then(function(){b.set("author",e),c.resolve(d(b))})["catch"](function(a){c.reject(a)}),c.promise},voteDown:function(b){var c=a.defer(),e=b.get("author");return b.downVote().then(function(){b.set("author",e),c.resolve(d(b))})["catch"](function(a){c.reject(a)}),c.promise},comment:function(b,c){var d=a.defer(),e=b.get("author");return b.comment(c).then(function(){b.set("author",e),d.resolve()})["catch"](function(a){d.reject(a)}),d.promise},getById:function(d){var e=a.defer(),f=c.Cobject("answer").Model;return f.fetch(d).then(function(){return b.getById(f.get("author"))}).then(function(a){f.set("author",a),e.resolve(f)})["catch"](function(a){e.reject(a)}),e.promise}}}]);